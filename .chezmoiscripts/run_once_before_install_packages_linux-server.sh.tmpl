{{ if eq .chezmoi.os "linux" -}}
#!/bin/sh

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
. "{{ .chezmoi.homeDir }}/.cargo/env"

## eza
cargo install eza --locked

## gitui
cargo install gitui --locked

## zellij
cargo install --locked zellij

## git-delta
cargo install --locked git-delta

## tealdeer
cargo install --locked tealdeer

## cargo update command
cargo install cargo-update

# download repo if it does not exists
if [ ! -d ~/.local/share/utils/ ]; then
	git clone git@github.com:se-jaeger/utils.git ~/.local/share/utils/
fi

# update repo and install utils
cd ~/.local/share/utils
git fetch
git pull
cargo install --path rust/zet/
cargo install --path rust/motd/

# escalate privileges
sudo /bin/bash <<EOF
    apt update

    ## zsh
    apt install -y zsh
    chsh -s /usr/bin/zsh $(echo {{ .chezmoi.username }})

    # Dependencies
    apt install -y npm

    ## fd
    apt install -y fd-find
    ln -sf /usr/bin/fdfind /usr/local/bin/fd

    ## bat
    apt install -y bat
    ln -sf /usr/bin/batcat /usr/local/bin/bat

    ## fzf
    rm -f /usr/local/bin/fzf
    wget https://github.com/junegunn/fzf/releases/download/v0.54.1/fzf-0.54.1-linux_amd64.tar.gz -O - | tar -xz -C /usr/local/bin/
    chown root:root /usr/local/bin/fzf
    chmod 755 /usr/local/bin/fzf

    ## viddy
    mkdir tmp
    cd tmp
    wget -O viddy.tar.gz https://github.com/sachaos/viddy/releases/download/v0.4.0/viddy_Linux_x86_64.tar.gz && tar xvf viddy.tar.gz && mv viddy /usr/local/bin
    cd ..
    rm -rf tmp

    ## zoxide
    apt install -y zoxide

    ## ripgrep
    apt install ripgrep

    ## tldr
    apt install -y tldr

    ## fail2ban
    apt install -y iptables
    apt install -y fail2ban

    ## starship
    curl -sS https://starship.rs/install.sh | sh

    ## build nvim from source
    apt install -y ninja-build gettext cmake unzip curl build-essential
    rm -rf /tmp/neovim
    git clone https://github.com/neovim/neovim /tmp/neovim
    cd /tmp/neovim
    git checkout stable
    make CMAKE_BUILD_TYPE=RelWithDebInfo
    cd build
    cpack -G DEB && sudo dpkg -i nvim-linux64.deb
    rm -rf /tmp/neovim
    cd  # avoid downstream issues

EOF
{{ end -}}
