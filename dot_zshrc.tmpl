#### ZSH Settings and Plugins. ####
###################################

# Oh My Zsh installation is updated by chezmoi
# Auto updates will cause to drift out of sync with chezmoi's source state
zstyle ':omz:update' mode disabled

export ZSH="{{ .chezmoi.homeDir }}/.oh-my-zsh"
{{ if eq .chezmoi.os "darwin" -}} VSCODE=codium {{- end }}

plugins=(
    # simple alias/helper functions
    extract
    kubectl
    git
    ripgrep
    fd
    fzf
    z
    
    {{ if eq .chezmoi.os "darwin" -}} thefuck {{- end }}
    {{ if not (or (eq .chezmoi.hostname "mail") (eq .chezmoi.hostname "homeserver")) -}} poetry {{- end }}
    
    # more advanced zsh features
    zsh-autosuggestions
    zsh-syntax-highlighting
    zsh-activate-py-environment
    zsh-interactive-cd

    # activate starship theme
    starship

    # should be the last plugins loaded
    history-substring-search
)

source $ZSH/oh-my-zsh.sh


#### Aliases, builtin replacements, and commands ####
#####################################################

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# some builtin replacements
alias ls="eza --all --long --header --group --git --icons --group-directories-first"
alias cat="bat"
cd() {
    builtin cd "$@"
    l
}

# prefer ~/.config file
export XDG_CONFIG_HOME=$HOME/.config

# use nvim as default editor
export EDITOR=$(where nvim)
alias v="nvim"
alias vi="nvim"
alias vim="nvim"

# jump to already visited directories
j() {
    z "$@" # j for jump and no movement of finger
    l
}

# custom tree command
tree(){
    if [ -n "$1" ]; then
        LEVEL="--level=$1"
    else
        LEVEL=""
    fi

    eza --all --tree --header --group --git --icons --group-directories-first $LEVEL
}

#### Environment variables, and settings ####
#############################################

{{ if eq .chezmoi.os "linux" -}} export LANG=en_US.UTF-8 {{- end }}

# use bat for manpages
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export BAT_PAGER="less -R"

# fzf settings
export FZF_DEFAULT_COMMAND="fd --type file --type symlink --follow"
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --cycle --multi"
export FZF_CTRL_R_OPTS="
  --preview 'echo {}' --preview-window down:5:wrap
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard'"

# add some tokens to env
# Use 'umask 077; touch .export_tokens' to create only user readable file
test -f {{ .chezmoi.homeDir }}/.export_tokens && {
    source {{ .chezmoi.homeDir }}/.export_tokens
}

# add some secret alias
# Use 'umask 077; touch .secret_alias' to create only user readable file
test -f {{ .chezmoi.homeDir }}/.secret_alias && {
    source {{ .chezmoi.homeDir }}/.secret_alias
}

{{ if eq .chezmoi.os "darwin" -}}
#### macOS specific settings ####
#################################

alias del="trash"
alias watch="viddy"

# set gpg tty to sign git commits
export GPG_TTY=$(tty)
{{- end }}


{{ if not (or (eq .chezmoi.hostname "mail") (eq .chezmoi.hostname "homeserver")) -}}
#### Python tools and settings ####
###################################

{{ if eq .chezmoi.os "linux" -}} export PATH="/home/{{ .chezmoi.username }}/.local/bin:/home/{{ .chezmoi.username }}/.pyenv/bin:$PATH" {{- end }}

# pyenv
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

{{ if eq .chezmoi.os "darwin" -}}
rm -f "{{ .chezmoi.homeDir }}/.pyenv/versions/*-brew"
for i in $(brew --cellar)/python*/* ; do
    ln -s -f "$i" "{{ .chezmoi.homeDir }}/.pyenv/versions/${i##/*/}-brew"
done
pyenv rehash

# to fix `brew doctor` warning when pyenv is installed:
alias brew='env PATH="${PATH//$(pyenv root)/shims:/}" brew'
{{- end }}

# Python linting + formatting
python_lint() {
    if [ -z "$1" ]; then
        DIRECTORY=$(pwd)
    else
        DIRECTORY=$(realpath $1)
    fi
    MYPY_CMD="mypy $DIRECTORY"
    RUFF_CHECK_CMD="ruff check $DIRECTORY"

    echo "\033[0;32m\n\nRunning: '$RUFF_CHECK_CMD'\n\033[0m"
    eval $RUFF_CHECK_CMD
    
    echo "\033[0;32m\n\nRunning: '$MYPY_CMD'\n\033[0m"
    eval $MYPY_CMD
    
    true # reset exit code.
}
python_format() {
    if [ -z "$1" ]; then
        DIRECTORY=$(pwd)
    else
        DIRECTORY=$(realpath $1)
    fi
    MYPY_CMD="mypy $DIRECTORY"
    RUFF_CHECK_CMD="ruff check --fix $DIRECTORY"
    RUFF_FORMAT_CMD="ruff format $DIRECTORY"
    
    echo "\033[0;32m\n\nRunning: '$RUFF_FORMAT_CMD'\n\033[0m"
    eval $RUFF_FORMAT_CMD

    echo "\033[0;32m\n\nRunning: '$RUFF_CHECK_CMD'\n\033[0m"
    eval $RUFF_CHECK_CMD

    echo "\033[0;32m\n\nRunning: '$MYPY_CMD'\n\033[0m"
    eval $MYPY_CMD

    true # reset exit code.
}

# gitui needs the (GitHub) SSH key loaded
eval `ssh-agent -s` &> /dev/null && ssh-add {{ .chezmoi.homeDir }}/.ssh/id_ed25519 &> /dev/null
{{- end }}

