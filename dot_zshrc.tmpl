#### ZSH options and settings ####
##################################

# plugins
source ~/.local/share/zsh/plugins/fzf-tab/fzf-tab.plugin.zsh
source ~/.local/share/zsh/plugins/fzf-tab-source/fzf-tab-source.plugin.zsh
source ~/.local/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh
source ~/.local/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh
source ~/.local/share/zsh/plugins/zsh-activate-py-environment/zsh-activate-py-environment.plugin.zsh

source ~/.config/zsh/config.zsh
source ~/.config/zsh/completion.zsh
source ~/.config/zsh/keybindings.zsh
source ~/.config/zsh/aliases.zsh

#### fzf ####
#############
if [ $(command -v "fzf") ]; then
    eval "$(fzf --zsh)"
fi

export FZF_DEFAULT_COMMAND="fd --type file --type symlink --follow"
export FZF_DEFAULT_OPTS="
    --height ~40%
    --preview-window=right,75%
    --layout reverse
    --cycle
    --multi
    --bind 'CTRL-j:down'
    --bind 'CTRL-k:up'
    --bind 'CTRL-u:preview-half-page-up'
    --bind 'CTRL-d:preview-half-page-down'
"

#### zoxide ####
################
 
if [ $(command -v "zoxide") ]; then
  eval "$(zoxide init zsh)"
fi


#### Some Private Tokens/Aliases ####
#####################################

# add some tokens to env
# Use 'umask 077; touch .export_tokens' to create only user readable file
test -f {{ .chezmoi.homeDir }}/.export_tokens && {
    source {{ .chezmoi.homeDir }}/.export_tokens
}

# add some secret alias
# Use 'umask 077; touch .secret_alias' to create only user readable file
test -f {{ .chezmoi.homeDir }}/.secret_alias && {
    source {{ .chezmoi.homeDir }}/.secret_alias
}

{{ if eq .chezmoi.os "darwin" -}}
#### macOS specific settings ####
#################################

alias del="trash"
alias watch="viddy"

# set gpg tty to sign git commits
export GPG_TTY=$(tty)
{{- end }}


{{ if not (or (eq .chezmoi.hostname "mail") (eq .chezmoi.hostname "homeserver")) -}}
#### Python tools and settings ####
###################################

{{ if eq .chezmoi.os "linux" -}} export PATH="/home/{{ .chezmoi.username }}/.local/bin:/home/{{ .chezmoi.username }}/.pyenv/bin:$PATH" {{- end }}

# pyenv
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

{{ if eq .chezmoi.os "darwin" -}}
rm -f "{{ .chezmoi.homeDir }}/.pyenv/versions/*-brew"
for i in $(brew --cellar)/python*/* ; do
    ln -s -f "$i" "{{ .chezmoi.homeDir }}/.pyenv/versions/${i##/*/}-brew"
done
pyenv rehash

# to fix `brew doctor` warning when pyenv is installed:
alias brew='env PATH="${PATH//$(pyenv root)/shims:/}" brew'
{{- end }}

# Python linting + formatting
python_lint() {
    if [ -z "$1" ]; then
        DIRECTORY=$(pwd)
    else
        DIRECTORY=$(realpath $1)
    fi
    MYPY_CMD="${HOME}/.local/share/nvim/mason/bin/mypy $DIRECTORY"
    RUFF_CHECK_CMD="${HOME}/.local/share/nvim/mason/bin/ruff check $DIRECTORY"

    echo "\033[0;32m\n\nRunning: '$RUFF_CHECK_CMD'\n\033[0m"
    eval $RUFF_CHECK_CMD

    echo "\033[0;32m\n\nRunning: '$MYPY_CMD'\n\033[0m"
    eval $MYPY_CMD

    true # reset exit code.
}
python_format() {
    if [ -z "$1" ]; then
        DIRECTORY=$(pwd)
    else
        DIRECTORY=$(realpath $1)
    fi
    MYPY_CMD="${HOME}/.local/share/nvim/mason/bin/mypy $DIRECTORY"
    RUFF_CHECK_CMD="${HOME}/.local/share/nvim/mason/bin/ruff check --fix $DIRECTORY"
    RUFF_FORMAT_CMD="${HOME}/.local/share/nvim/mason/bin/ruff format $DIRECTORY"

    echo "\033[0;32m\n\nRunning: '$RUFF_FORMAT_CMD'\n\033[0m"
    eval $RUFF_FORMAT_CMD

    echo "\033[0;32m\n\nRunning: '$RUFF_CHECK_CMD'\n\033[0m"
    eval $RUFF_CHECK_CMD

    echo "\033[0;32m\n\nRunning: '$MYPY_CMD'\n\033[0m"
    eval $MYPY_CMD

    true # reset exit code.
}

# gitui needs the (GitHub) SSH key loaded
eval `ssh-agent -s` &> /dev/null && ssh-add {{ .chezmoi.homeDir }}/.ssh/id_ed25519 &> /dev/null
{{- end }}


#### Terminal Theme ####
########################

eval "$(starship init zsh)"
