#### ZSH Settings and Plugins. ####
###################################

# Oh My Zsh installation is updated by chezmoi
# Auto updates will cause to drift out of sync with chezmoi's source state
zstyle ':omz:update' mode disabled

export ZSH="{{ .chezmoi.homeDir }}/.oh-my-zsh"

plugins=(
    extract
    git
    {{ if and (eq .chezmoi.os "linux") (not (eq .chezmoi.hostname "mail")) -}} poetry {{- end }}
    zsh-autosuggestions
    zsh-syntax-highlighting
    zsh-activate-py-environment

    # should be last plugin loaded
    history-substring-search
)

source $ZSH/oh-my-zsh.sh


#### Aliases, builtin replacements, and commands ####
#####################################################

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# some builtin replacements
alias ls="eza --all --long --header --group --git --icons --group-directories-first"
alias cat="bat"
cd() {
    builtin cd "$@"
    l
}

#### Environment variables, and settings ####
#############################################

{{ if eq .chezmoi.os "linux" -}} export LANG=en_US.UTF-8 {{- end }}

# use bat for manpages
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export BAT_PAGER="less -R"

# add some tokens to env
# Use 'umask 077; touch .export_tokens' to create only user readable file
test -f {{ .chezmoi.homeDir }}/.export_tokens && {
    source {{ .chezmoi.homeDir }}/.export_tokens
}

# add some secret alias
# Use 'umask 077; touch .secret_alias' to create only user readable file
test -f {{ .chezmoi.homeDir }}/.secret_alias && {
    source {{ .chezmoi.homeDir }}/.secret_alias
}

{{ if eq .chezmoi.os "linux" -}}
#### Linux specific settings ####
#################################

# custom tree command
tree() {
    if [ -z "$1" ]; then
        eza --all --tree --header --group --git --icons --group-directories-first
    else
        eza --all --tree --header --group --git --icons --group-directories-first --level $1
    fi
}

# fzf settings
export FZF_DEFAULT_COMMAND="fd --type file --type symlink --follow"
export FZF_DEFAULT_OPTS="--layout=reverse --inline-info"

[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ] && source /usr/share/doc/fzf/examples/key-bindings.zsh

{{ else if eq .chezmoi.os "darwin" -}}
#### macOS specific settings ####
#################################

alias kcl="kubectl"
alias hd="helm delete"
alias hl="helm list"
alias del="trash"
alias watch="viddy"
alias vsc="open -a VSCodium ."

eval "$(zoxide init zsh)"
j() {
    z "$@" # j for jump and no movement of finger
    l
}

# custom tree command
source {{ .chezmoi.homeDir }}/.config/broot/launcher/bash/br
alias tree="br"

# skim settings
export SKIM_DEFAULT_COMMAND="fd --type file --type symlink --follow"
export SKIM_DEFAULT_OPTIONS="--reverse --height 40% --inline-info --no-clear --ansi"

search_files(){
    if [ -n "$1" ]; then
        FLAGS="$1"
    else
        FLAGS=""
    fi

    SKIM_DEFAULT_COMMAND="$SKIM_DEFAULT_COMMAND $FLAGS" sk --preview 'bat --color=always {}' --header 'Searching and preview files ...'
}

search_file_content(){
    if [ -n "$1" ]; then
        FLAGS="$1"
    else
        FLAGS=""
    fi

    SKIM_DEFAULT_COMMAND="$SKIM_DEFAULT_COMMAND $FLAGS" sk --interactive --cmd 'rg --context 3 --color=always --line-number "{}"' --header 'Searching files content ...'
}

search_directories(){
    if [ -n "$1" ]; then
        FLAGS="$1"
    else
        FLAGS=""
    fi

    SKIM_DEFAULT_COMMAND="fd --type directory --follow" sk --preview 'eza --all --long --header --group --git --icons --group-directories-first {}' --header 'Searching and preview directories ...'
}

[ -f /usr/local/share/zsh/site-functions/key-bindings.zsh ] && source /usr/local/share/zsh/site-functions/key-bindings.zsh

eval $(thefuck --alias)
alias f="fuck"

# set gpg tty to sign git commits
export GPG_TTY=$(tty)
{{- end }}


{{ if not (or (eq .chezmoi.hostname "mail") (eq .chezmoi.hostname "homeserver")) -}}
#### Python tools and settings ####
###################################

{{ if eq .chezmoi.os "linux" -}} export PATH="/home/{{ .chezmoi.username }}/.local/bin:/home/{{ .chezmoi.username }}/.pyenv/bin:$PATH" {{- end }}

# pyenv
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

{{ if eq .chezmoi.os "darwin" -}}
rm -f "{{ .chezmoi.homeDir }}/.pyenv/versions/*-brew"
for i in $(brew --cellar)/python*/* ; do
    ln -s -f "$i" "{{ .chezmoi.homeDir }}/.pyenv/versions/${i##/*/}-brew"
done
pyenv rehash

# to fix `brew doctor` warning when pyenv is installed:
alias brew='env PATH="${PATH//$(pyenv root)/shims:/}" brew'
{{- end }}

# Python linting + formatting
python_lint() {
    if [ -z "$1" ]; then
        DIRECTORY=$(pwd)
    else
        DIRECTORY=$(realpath $1)
    fi
    MYPY_CMD="mypy $DIRECTORY"
    RUFF_CHECK_CMD="ruff check $DIRECTORY"

    echo "\033[0;32m\n\nRunning: '$RUFF_CHECK_CMD'\n\033[0m"
    eval $RUFF_CHECK_CMD
    
    echo "\033[0;32m\n\nRunning: '$MYPY_CMD'\n\033[0m"
    eval $MYPY_CMD
    
    true # reset exit code.
}
python_format() {
    if [ -z "$1" ]; then
        DIRECTORY=$(pwd)
    else
        DIRECTORY=$(realpath $1)
    fi
    MYPY_CMD="mypy $DIRECTORY"
    RUFF_CHECK_CMD="ruff check --fix $DIRECTORY"
    RUFF_FORMAT_CMD="ruff format $DIRECTORY"
    
    echo "\033[0;32m\n\nRunning: '$RUFF_FORMAT_CMD'\n\033[0m"
    eval $RUFF_FORMAT_CMD

    echo "\033[0;32m\n\nRunning: '$RUFF_CHECK_CMD'\n\033[0m"
    eval $RUFF_CHECK_CMD

    echo "\033[0;32m\n\nRunning: '$MYPY_CMD'\n\033[0m"
    eval $MYPY_CMD

    true # reset exit code.
}

# gitui needs the (GitHub) SSH key loaded
eval `ssh-agent -s` &> /dev/null && ssh-add {{ .chezmoi.homeDir }}/.ssh/id_ed25519 &> /dev/null
{{- end }}


#### Terminal Theme ####
########################

# Finally, activate Terminal Theme
eval "$(starship init zsh)"
